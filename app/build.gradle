apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'kotlin-android-extensions'
//apply plugin: 'maven-publish'
// add this to use another dependency rather than bintray-release
apply from: '../dependencies.gradle'

android {
//    Dong Uyen added ndk version specify
    ndkVersion "20.0.5594570"
    compileSdkVersion versions.compileSdk
    compileSdkVersion versions.compileSdk
    defaultConfig {
        applicationId "com.rahulislam.facepsy"
        minSdkVersion versions.minSdk
        targetSdkVersion versions.compileSdk
        versionCode versions.publishVersionCode
        versionName versions.publishVersion
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
        }

        externalNativeBuild {
            cmake {
                cFlags "-O3"
                cppFlags "-std=c++11 -frtti -fexceptions"
                arguments "-DANDROID_PLATFORM=android-21",
                        "-DANDROID_TOOLCHAIN=clang",
                        "-DANDROID_STL=c++_shared",
                        "-DANDROID_CPP_FEATURES=rtti exceptions"
            }
        }

        sourceSets {
            main {
                jniLibs.srcDirs = [
                        "src/main/cppLibs/dlib/lib",
                        "src/main/cppLibs/opencv"
                ]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

    packagingOptions {
        pickFirst "**/libc++_shared.so"
    }
}

android {
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
    aaptOptions {
        noCompress "tflite", "lite"
    }
}

repositories {
//    maven { url 'https://google.bintray.com/tensorflow' }
    maven { url "https://jitpack.io" }
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
//    compile "org.jetbrains.kotlinx:kotlinx-coroutines-android:0.22.2"
    implementation 'com.google.code.gson:gson:2.8.6'
    def work_version = "2.3.4"

    // Kotlin + coroutines
    implementation "androidx.work:work-runtime-ktx:$work_version"

    // Import the platform
    implementation platform('com.google.firebase:firebase-bom:25.4.1')
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-auth'
    implementation 'com.google.firebase:firebase-firestore-ktx'
    implementation 'com.google.firebase:firebase-database-ktx'
    implementation 'com.firebaseui:firebase-ui-auth:6.2.0'
    implementation 'com.google.firebase:firebase-storage-ktx'

    // Add the dependencies for the Firebase Cloud Messaging and Analytics libraries
    implementation 'com.google.firebase:firebase-messaging-ktx:20.3.0'
    implementation 'com.google.firebase:firebase-analytics-ktx:17.5.0'

    implementation 'androidx.work:work-runtime-ktx:' + versions.workManager

    implementation "com.lyft.kronos:kronos-android:0.0.1-alpha09"

    // Face features
    implementation 'com.google.mlkit:face-detection:16.0.0'
    implementation 'com.google.guava:guava:17.0'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:' + versions.kotlin

    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.1.1'

    implementation 'androidx.core:core-ktx:' + versions.ktx
    implementation 'androidx.appcompat:appcompat:' + versions.androidx
    implementation 'org.apache.commons:commons-compress:1.16'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation project(path: ':library')
    implementation "org.jetbrains.kotlin:kotlin-script-runtime:1.3.72"

    // Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:25.12.0')

    // Declare the dependency for the Firebase ML Custom Models library
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-ml-model-interpreter'

    // Also declare the dependency for the TensorFlow Lite library and specify its version
    implementation 'org.tensorflow:tensorflow-lite:2.3.0'
    implementation 'org.tensorflow:tensorflow-lite-support:0.0.0-nightly'

}

kotlin {
    experimental {
        coroutines "enable"
    }
}

configurations {
    // Resolves dependency conflict caused by some dependencies use
    // com.google.guava:guava and com.google.guava:listenablefuture together.
    all*.exclude group: 'com.google.guava', module: 'listenablefuture'
}